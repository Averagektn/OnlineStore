-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.section
(
    sec_id serial NOT NULL,
    sec_name character varying(255) NOT NULL,
    CONSTRAINT pk_section PRIMARY KEY (sec_id)
);

CREATE TABLE IF NOT EXISTS public.brand
(
    bra_id serial NOT NULL,
    bra_name character varying(255),
    CONSTRAINT pk_brand PRIMARY KEY (bra_id)
);

CREATE TABLE IF NOT EXISTS public.category
(
    cat_id serial NOT NULL,
    cat_sub integer NOT NULL GENERATED ALWAYS AS IDENTITY ( START 1 ),
    cat_name character varying(255) NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (cat_id)
);

CREATE TABLE IF NOT EXISTS public.product
(
    pro_id serial NOT NULL,
    pro_price money NOT NULL,
    pro_quantity smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    pro_description text,
    pro_image text,
    pro_category integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    pro_brand integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    CONSTRAINT pk_product PRIMARY KEY (pro_id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    usr_id serial NOT NULL,
    usr_phone character varying(15) NOT NULL,
    usr_firstname character varying(50) NOT NULL,
    usr_lastname character varying(50) NOT NULL,
    usr_email character varying(254) NOT NULL,
    usr_password character varying(128) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (usr_id)
);

CREATE TABLE IF NOT EXISTS public."order"
(
    ord_id serial NOT NULL,
    ord_user integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    ord_date date NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ord_sum money NOT NULL,
    CONSTRAINT pk_order PRIMARY KEY (ord_id)
);

CREATE TABLE IF NOT EXISTS public.review
(
    rev_id serial NOT NULL,
    rev_product integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    rev_author integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    rev_comment text NOT NULL,
    rev_rating smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 MAXVALUE 10 ),
    CONSTRAINT pk_review PRIMARY KEY (rev_id)
);

CREATE TABLE IF NOT EXISTS public.address
(
    adr_id serial NOT NULL,
    adr_city character varying(255) NOT NULL,
    adr_street character varying(255) NOT NULL,
    adr_home smallint NOT NULL,
    adr_floor smallint,
    adr_apartment smallint,
    adr_entrance smallint,
    CONSTRAINT pk_address PRIMARY KEY (adr_id)
);

CREATE TABLE IF NOT EXISTS public.user_address
(
    user_usr_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    address_adr_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 )
);

CREATE TABLE IF NOT EXISTS public.cart
(
    crt_user integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    crt_product integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    crt_quantity smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 )
);

CREATE TABLE IF NOT EXISTS public.order_product
(
    order_ord_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    product_pro_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 )
);

CREATE TABLE IF NOT EXISTS public.category_section
(
    category_cat_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( MINVALUE 1 ),
    section_sec_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 )
);

ALTER TABLE IF EXISTS public.category
    ADD CONSTRAINT fk_categoty FOREIGN KEY (cat_sub)
    REFERENCES public.category (cat_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT fk_brand FOREIGN KEY (pro_brand)
    REFERENCES public.brand (bra_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT fk_category FOREIGN KEY (pro_category)
    REFERENCES public.category (cat_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT fk_user FOREIGN KEY (ord_user)
    REFERENCES public."user" (usr_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.review
    ADD CONSTRAINT fk_user FOREIGN KEY (rev_author)
    REFERENCES public."user" (usr_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.review
    ADD CONSTRAINT fk_product FOREIGN KEY (rev_product)
    REFERENCES public.product (pro_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.user_address
    ADD CONSTRAINT fk_user FOREIGN KEY (user_usr_id)
    REFERENCES public."user" (usr_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.user_address
    ADD CONSTRAINT fk_address FOREIGN KEY (address_adr_id)
    REFERENCES public.address (adr_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart
    ADD CONSTRAINT fk_user FOREIGN KEY (crt_user)
    REFERENCES public."user" (usr_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.cart
    ADD CONSTRAINT fk_product FOREIGN KEY (crt_product)
    REFERENCES public.product (pro_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.order_product
    ADD CONSTRAINT fk_order FOREIGN KEY (order_ord_id)
    REFERENCES public."order" (ord_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.order_product
    ADD CONSTRAINT fk_product FOREIGN KEY (product_pro_id)
    REFERENCES public.product (pro_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.category_section
    ADD CONSTRAINT fk_category FOREIGN KEY (category_cat_id)
    REFERENCES public.category (cat_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.category_section
    ADD CONSTRAINT fk_section FOREIGN KEY (section_sec_id)
    REFERENCES public.section (sec_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;

END;